services:
  nginx:
    build: ./nginx        # <- on build l'image depuis /nginx
    container_name: pong_nginx
    ports:
      - "8081:80"
      - "8443:443"        # ou "443:443" si tu veux le port 443 en direct
    volumes:
      - ./static:/static
      - ./media:/app/media
      - /dev/null:/var/log/nginx/access.log  # Rediriger les logs vers /dev/null
    depends_on:
      - uvicorn
    networks:
      - pong_network

  uvicorn:
    build: .
    container_name: pong_uvicorn
    command: /app/entrypoint.sh
    volumes:
      - .:/app
      - ./media:/app/media
  
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    networks:
      - pong_network

  db:
    image: postgres:15
    container_name: pong_db
    environment:
      POSTGRES_DB: pong_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pong_network

  redis:
    image: redis:alpine
    container_name: pong_redis
    networks:
      - pong_network

networks:
  pong_network:
    driver: bridge

volumes:
  postgres_data:
